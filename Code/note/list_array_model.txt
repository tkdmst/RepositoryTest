List<Human>[]party = new ArrayList[nom];

のようなものをすることになりまして・・・
何じゃこりゃ！？としたわけです。

HumanクラスをArrayListの形で格納し、その後party配列でnom個の箱へ格納する。ってこと。
Humanクラスは名前とか性別が入っていて、新規で増やしていく・・・と。
2重配列的なことをします。
※上をもう一回ゲーム風に説明しよう！
  PT(パーティ)を組むときに、5人しか枠がなかったとする(nom=5)
  PTの人のプロフィールが入ったクラス(Human.class)をまとめて格納する箱を作る(party[])。
　ゲーム風だとちょっとわかりやすい！（自分が）

ちなみに、
List<Human>[]party = new ArrayList<Human>[nom];
とすると、総称配列とやらでエラーでてしまうわでｳｺﾞｺﾞｺﾞｺﾞ



解決策は、必要な配列を探してからそれをリストに一旦詰め、
そこにaddで格納して、また配列に入れなおすという作業。


要は
  List<Human>hoge = new ArrayList<Human>();
	if (party[nom] != null)
			hoge = party[nom];
	hoge.add(Human);
	party[nom] = hoge;
わかりづらいけど書き様がなーい。
※これは間違っていますので下を確認ください。


配列と同じ形を持つリスト(ここならhoge)を作って、そこに一回引き出せば.add()を使えることに気付いたらOK!
party[]の形だとどうにもaddができなくて半日以上悶え苦しみましたorz
「あ”～～～～～～～～なんでクリアできないの～～～～～～」とかずーっと思ってました。
つまり、小さく分離化していけばどうにか私たちにも扱える形になる！ってことだったりするんだと納得。
どこかで使えたらいいなぁ・・・



8/22追記
レビューしてもらったら上だとエラーが出ると・・・
うーん悔しい！
	if (party[num] == null)
		party[num] = new ArrayList<Human>();
	party[num].add(human);
ですってよ！
新しくArrayListを作らないとエラーが出るとのこと。
別のリストを作るよりこっちの方が万全ですよ！
なかなか上手く行かないものです。

なかなか上手く行かずに苦しいけど、
レビューしてもらえるあのどきどき感が楽しいﾈ！
